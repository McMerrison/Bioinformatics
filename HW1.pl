=begin
Name: Talha Ehtasham
CISC 436 Bioinformatics
Homework 1
=cut

#use strict;
use warnings;
#use List::MoreUtils qw(first_index);

my @chars = ("A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V");
my $length = 50;
my @matrix;


=begin
Generate a random string of amino acids using array of given letters
Use global length variable to determine how long seuqnce will begin
=cut
sub rand_seq
{
	my $seq;
	for ($a = 0; $a < $length; $a++) {
		$seq .= $chars[rand @chars];
	}
	$seq;
}

=begin
Take sequence generated in rand_seq
For each amino acid:
1. Check against array of characters, the index will match matrix column (use first_index)
1. Generate random number
2. Use this against pam1 matrix
3. Determine if it will be replaced and by which amino acid
=cut
sub mutate_seq
{
	my $str = $_[0];
	print "$str\n";
	foreach $letter (split //, $str) {
		$x = 0;
		foreach (@chars) {
			if ($_ eq $letter) {
				$index = $x;
				print "Found matching character $letter at index $index\n";
				my $evolve = &randcalc;
				&weightarray($index);
			}
			$x++;
		}
	}
}

=begin
Read pam1 text file
For each row, parse through whitespaces
Add each number to matrix
Use this matrix to compare amino acid replacement probaility
=cut
sub readpam
{
	my $i = 0;
	my $j = 0;
	my $filename = 'pam1.txt';
	open(my $pam, $filename) or die "ERROR";
	
	while (my $row = <$pam>) {
		my @tokens = split /\s{1,}/, $row;
		foreach my $token(@tokens) {
			
			$matrix[$i][$j] = $token;
			#print "$token ";
			$j++;
		}
		#print "$j";
		$i++;
		$j = 0;
		
	}
}

=begin
Create an array based off the column of replacement probabilities at given index
Use this to make a random weight-based replacement in mut_seq
=cut
sub weightarray
{
	my @weightarr;
	for ($t = 0; $t < 20; $t++)
	{
		$weightarr[$t] = $matrix[$t][$_[0]];
	}
	for(my $i = 0; $i < 20; $i++) {
		print "$weightarr[$i] ";
	}
}

=begin
Generate a random number
Use to calculate if amino acid will be replaced
=cut
sub randcalc
{
	my $random = rand()*10000;
	$random;
}

=begin
Print, row by row, the matrix generated by the readpam subroutine
=cut
sub printmatrix
{
	for($row = 0; $row < 20; $row++) {
		for($col = 0; $col < 20; $col++) {
			print "$matrix[$row][$col] ";
		}
		print "\n";
	}
}


=begin
Main program
=cut
my $sequence = &rand_seq;
&readpam;
#&printmatrix;
&mutate_seq($sequence);